Use CONNECT or CREATE DATABASE to specify a database
SET NAMES ASCII;
CREATE DATABASE 'test.fdb' DEFAULT CHARACTER SET ISO8859_1;

INPUT ddl/input/base-tab.sql;
 CREATE TABLE STAFF (EMPNUM CHAR(3) NOT NULL UNIQUE,EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
 CREATE TABLE STAFF1 (EMPNUM CHAR(3) NOT NULL, EMPNAME  CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
 CREATE TABLE STAFF3 (EMPNUM CHAR(3) NOT NULL , EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15), UNIQUE (EMPNUM));
 CREATE TABLE STAFF4 (EMPNUM CHAR(3) NOT NULL, EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15)); 
 
 CREATE TABLE PROJ (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));
 CREATE TABLE PROJ1 (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));

 CREATE TABLE WORKS (EMPNUM CHAR(3) NOT NULL, PNUM CHAR(3) NOT NULL, HOURS DECIMAL(5), UNIQUE(EMPNUM,PNUM));

 CREATE TABLE VTABLE (COL1   INTEGER, COL2   INTEGER, COL3   INTEGER, COL4   INTEGER, COL5   DECIMAL(7,2)); 
 CREATE TABLE UPUNIQ (NUMKEY  DECIMAL(3) NOT NULL UNIQUE, COL2 CHAR(2));

 INSERT INTO STAFF VALUES ('E1','Alice',12,'Deale');
 INSERT INTO STAFF VALUES ('E2','Betty',10,'Vienna');
 INSERT INTO STAFF VALUES ('E3','Carmen',13,'Vienna');
 INSERT INTO STAFF VALUES ('E4','Don',12,'Deale');
 INSERT INTO STAFF VALUES ('E5','Ed',13,'Akron');
 INSERT INTO PROJ VALUES  ('P1','MXSS','Design',10000,'Deale');
 INSERT INTO PROJ VALUES  ('P2','CALM','Code',30000,'Vienna');
 INSERT INTO PROJ VALUES  ('P3','SDP','Test',30000,'Tampa');
 INSERT INTO PROJ VALUES  ('P4','SDP','Design',20000,'Deale');
 INSERT INTO PROJ VALUES  ('P5','IRM','Test',10000,'Vienna');
 INSERT INTO PROJ VALUES  ('P6','PAYR','Design',50000,'Deale');
 INSERT INTO WORKS VALUES  ('E1','P1',40);
 INSERT INTO WORKS VALUES  ('E1','P2',20);
 INSERT INTO WORKS VALUES  ('E1','P3',80);
 INSERT INTO WORKS VALUES  ('E1','P4',20);
 INSERT INTO WORKS VALUES  ('E1','P5',12);
 INSERT INTO WORKS VALUES  ('E1','P6',12);
 INSERT INTO WORKS VALUES  ('E2','P1',40);
 INSERT INTO WORKS VALUES  ('E2','P2',80);
 INSERT INTO WORKS VALUES  ('E3','P2',20);
 INSERT INTO WORKS VALUES  ('E4','P2',20);
 INSERT INTO WORKS VALUES  ('E4','P4',40);
 INSERT INTO WORKS VALUES  ('E4','P5',80);
 INSERT INTO VTABLE VALUES(10,+20,30,40,10.50);
 INSERT INTO VTABLE VALUES(0,1,2,3,4.25);
 INSERT INTO VTABLE VALUES(100,200,300,400,500.01);
 INSERT INTO VTABLE VALUES(1000,-2000,3000,NULL,4000.00);
 INSERT INTO STAFF3 SELECT * FROM STAFF;
 INSERT INTO UPUNIQ VALUES(1,'A');
 INSERT INTO UPUNIQ VALUES(2,'B');
 INSERT INTO UPUNIQ VALUES(3,'C');
 INSERT INTO UPUNIQ VALUES(4,'D');
 INSERT INTO UPUNIQ VALUES(6,'F');
 INSERT INTO UPUNIQ VALUES(8,'H');
COMMIT WORK;

 CREATE TABLE STAFF1 (EMPNUM    CHAR(3) NOT NULL, EMPNAME  CHAR(20), GRADE DECIMAL(4), CITY   CHAR(15));
Statement failed, SQLCODE = -607
unsuccessful metadata update
-Table STAFF1 already exists
After line 5 in file ddl/nist/dml075.sql
 CREATE TABLE PROJ1 (PNUM    CHAR(3) NOT NULL UNIQUE, PNAME  CHAR(20), PTYPE  CHAR(6), BUDGET DECIMAL(9), CITY   CHAR(15));
Statement failed, SQLCODE = -607
unsuccessful metadata update
-Table PROJ1 already exists
After line 7 in file ddl/nist/dml075.sql
 CREATE TABLE WORKS1(EMPNUM    CHAR(3) NOT NULL, PNUM    CHAR(3) NOT NULL, HOURS   DECIMAL(5), UNIQUE(EMPNUM, PNUM));

COMMIT WORK;

-- TEST:0431 Redundant rows in IN subquery!

 SELECT COUNT (*) FROM STAFF WHERE EMPNUM IN (SELECT EMPNUM FROM WORKS);

       COUNT 
============ 
           4 

-- PASS:0431 If count = 4?
 INSERT INTO STAFF1 SELECT * FROM STAFF;
 SELECT COUNT (*) FROM STAFF1 WHERE EMPNUM IN (SELECT EMPNUM FROM WORKS);

       COUNT 
============ 
           4 

-- PASS:0431 If count = 4?

ROLLBACK WORK;

-- TEST:0432 Unknown comparison predicate in ALL, SOME, ANY!
 UPDATE PROJ SET CITY = NULL WHERE PNUM = 'P3';
 SELECT COUNT(*) FROM STAFF WHERE CITY = ALL (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           0 

-- PASS:0432 If count = 0?

 SELECT COUNT(*) FROM STAFF WHERE CITY <> ALL (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           0 

-- PASS:0432 If count = 0?

 SELECT COUNT(*) FROM STAFF WHERE CITY = ANY (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           2 

-- PASS:0432 If count = 2?

 SELECT COUNT(*) FROM STAFF WHERE CITY <> ANY (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           3 

-- PASS:0432 If count = 3?

 SELECT COUNT(*) FROM STAFF WHERE CITY = SOME (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           2 

-- PASS:0432 If count = 2?

 SELECT COUNT(*) FROM STAFF WHERE CITY <> SOME (SELECT CITY FROM PROJ WHERE PNAME = 'SDP');

       COUNT 
============ 
           3 

-- PASS:0432 If count = 3?

ROLLBACK WORK;

-- TEST:0433 Empty subquery in ALL, SOME, ANY!
 SELECT COUNT(*) FROM PROJ WHERE PNUM = ALL (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           6 

-- PASS:0433 If count = 6?

 SELECT COUNT(*) FROM PROJ WHERE PNUM <> ALL (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           6 

-- PASS:0433 If count = 6?

 SELECT COUNT(*) FROM PROJ WHERE PNUM = ANY (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           0 

-- PASS:0433 If count = 0?

 SELECT COUNT(*) FROM PROJ WHERE PNUM <> ANY (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           0 

-- PASS:0433 If count = 0?

 SELECT COUNT(*) FROM PROJ WHERE PNUM = SOME (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           0 

 -- PASS:0433 If count = 0?

SELECT COUNT(*) FROM PROJ WHERE PNUM <> SOME (SELECT PNUM FROM WORKS WHERE EMPNUM = 'E8');

       COUNT 
============ 
           0 

-- PASS:0433 If count = 0?

-- TEST:0434 GROUP BY with HAVING EXISTS-correlated set function!
 SELECT PNUM, SUM(HOURS) FROM WORKS GROUP BY PNUM HAVING EXISTS (SELECT PNAME FROM PROJ WHERE PROJ.PNUM = WORKS.PNUM AND SUM(WORKS.HOURS) > PROJ.BUDGET / 200);

PNUM                     SUM 
====== ===================== 
P1                        80 
P5                        92 

-- PASS:0434 If 2 rows selected with values (in any order):?
-- PASS:0434 PNUM = 'P1', SUM(HOURS) = 80?
-- PASS:0434 PNUM = 'P5', SUM(HOURS) = 92?

-- TEST:0442 DISTINCT with GROUP BY, HAVING!
 SELECT PTYPE, CITY FROM PROJ GROUP BY PTYPE, CITY HAVING AVG(BUDGET) > 21000;

PTYPE  CITY            
====== =============== 
Code   Vienna          
Design Deale           
Test   Tampa           

-- PASS:0442 If 3 rows selected with PTYPE/CITY values(in any order):?
-- PASS:0442 Code/Vienna, Design/Deale, Test/Tampa?

 SELECT DISTINCT PTYPE, CITY FROM PROJ GROUP BY PTYPE, CITY HAVING AVG(BUDGET) > 21000;

PTYPE  CITY            
====== =============== 
Code   Vienna          
Design Deale           
Test   Tampa           

-- PASS:0442 If 3 rows selected with PTYPE/CITY values(in any order):?
-- PASS:0442 Code/Vienna, Design/Deale, Test/Tampa?

 SELECT DISTINCT SUM(BUDGET) FROM PROJ GROUP BY PTYPE, CITY HAVING AVG(BUDGET) > 21000;

                  SUM 
===================== 
                30000 
                80000 

-- PASS:0442 If 2 rows selected (in any order):?
-- PASS:0442 with SUM(BUDGET) values 30000 and 80000?

DROP DATABASE;
