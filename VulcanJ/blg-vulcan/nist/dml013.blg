Use CONNECT or CREATE DATABASE to specify a database
SET NAMES ASCII;
CREATE DATABASE 'test.fdb' DEFAULT CHARACTER SET ISO8859_1;
INPUT ddl/input/base-tab.sql;
CREATE TABLE STAFF (EMPNUM CHAR(3) NOT NULL UNIQUE,EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
CREATE TABLE STAFF1 (EMPNUM CHAR(3) NOT NULL, EMPNAME  CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
CREATE TABLE STAFF3 (EMPNUM CHAR(3) NOT NULL , EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15), UNIQUE (EMPNUM));
CREATE TABLE STAFF4 (EMPNUM CHAR(3) NOT NULL, EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15)); 
CREATE TABLE PROJ (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));
CREATE TABLE PROJ1 (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));
CREATE TABLE WORKS (EMPNUM CHAR(3) NOT NULL, PNUM CHAR(3) NOT NULL, HOURS DECIMAL(5), UNIQUE(EMPNUM,PNUM));
CREATE TABLE VTABLE (COL1   INTEGER, COL2   INTEGER, COL3   INTEGER, COL4   INTEGER, COL5   DECIMAL(7,2)); 
CREATE TABLE UPUNIQ (NUMKEY  DECIMAL(3) NOT NULL UNIQUE, COL2 CHAR(2));
INSERT INTO STAFF VALUES ('E1','Alice',12,'Deale');
INSERT INTO STAFF VALUES ('E2','Betty',10,'Vienna');
INSERT INTO STAFF VALUES ('E3','Carmen',13,'Vienna');
INSERT INTO STAFF VALUES ('E4','Don',12,'Deale');
INSERT INTO STAFF VALUES ('E5','Ed',13,'Akron');
INSERT INTO PROJ VALUES  ('P1','MXSS','Design',10000,'Deale');
INSERT INTO PROJ VALUES  ('P2','CALM','Code',30000,'Vienna');
INSERT INTO PROJ VALUES  ('P3','SDP','Test',30000,'Tampa');
INSERT INTO PROJ VALUES  ('P4','SDP','Design',20000,'Deale');
INSERT INTO PROJ VALUES  ('P5','IRM','Test',10000,'Vienna');
INSERT INTO PROJ VALUES  ('P6','PAYR','Design',50000,'Deale');
INSERT INTO WORKS VALUES  ('E1','P1',40);
INSERT INTO WORKS VALUES  ('E1','P2',20);
INSERT INTO WORKS VALUES  ('E1','P3',80);
INSERT INTO WORKS VALUES  ('E1','P4',20);
INSERT INTO WORKS VALUES  ('E1','P5',12);
INSERT INTO WORKS VALUES  ('E1','P6',12);
INSERT INTO WORKS VALUES  ('E2','P1',40);
INSERT INTO WORKS VALUES  ('E2','P2',80);
INSERT INTO WORKS VALUES  ('E3','P2',20);
INSERT INTO WORKS VALUES  ('E4','P2',20);
INSERT INTO WORKS VALUES  ('E4','P4',40);
INSERT INTO WORKS VALUES  ('E4','P5',80);
INSERT INTO VTABLE VALUES(10,+20,30,40,10.50);
INSERT INTO VTABLE VALUES(0,1,2,3,4.25);
INSERT INTO VTABLE VALUES(100,200,300,400,500.01);
INSERT INTO VTABLE VALUES(1000,-2000,3000,NULL,4000.00);
INSERT INTO STAFF3 SELECT * FROM STAFF;
INSERT INTO UPUNIQ VALUES(1,'A');
INSERT INTO UPUNIQ VALUES(2,'B');
INSERT INTO UPUNIQ VALUES(3,'C');
INSERT INTO UPUNIQ VALUES(4,'D');
INSERT INTO UPUNIQ VALUES(6,'F');
INSERT INTO UPUNIQ VALUES(8,'H');
COMMIT;
-- TEST:0039 COUNT DISTINCT function!
 INSERT INTO WORKS VALUES('E5','P5',NULL);
SELECT COUNT(DISTINCT HOURS) FROM WORKS;

       COUNT 
============ 

           4 

-- PASS:0039 If count = 4?
  
ROLLBACK;
INSERT INTO WORKS VALUES('E5','P5',NULL);
SELECT SUM(ALL HOURS) FROM WORKS;

                  SUM 
===================== 

                  464 

-- PASS:0167 If SUM(ALL HOURS) = 464?

ROLLBACK;
INSERT INTO WORKS VALUES('E5','P5',NULL);
SELECT SUM(HOURS) FROM WORKS;

                  SUM 
===================== 

                  464 

-- PASS:0168 If SUM(HOURS) = 464?

ROLLBACK;
-- TEST:0169 COUNT(*) function !
 INSERT INTO WORKS VALUES('E5','P5',NULL);
SELECT COUNT(*) FROM WORKS;

       COUNT 
============ 

          13 

-- PASS:0169 If count = 13?

ROLLBACK;
-- TEST:0040 SUM function with WHERE clause!
 SELECT SUM(HOURS) FROM WORKS WHERE PNUM = 'P2';

                  SUM 
===================== 

                  140 

-- PASS:0040 If SUM(HOURS) = 140?

-- TEST:0170 SUM DISTINCT function with WHERE clause!
 SELECT SUM(DISTINCT HOURS) FROM WORKS WHERE PNUM = 'P2';

                  SUM 
===================== 

                  100 

-- PASS:0170 If SUM(DISTINCT HOURS) = 100?

-- TEST:0171 SUM(column) + value!
 SELECT SUM(HOURS)+10 FROM WORKS WHERE PNUM = 'P2';

                      
===================== 

                  150 

-- PASS:0171 If SUM(HOURS)+10 = 150?

-- TEST:0041 MAX function in subquery!
 SELECT EMPNUM FROM STAFF WHERE GRADE = (SELECT MAX(GRADE) FROM STAFF) ORDER BY EMPNUM;

EMPNUM 
====== 

E3     
E5     

-- PASS:0041 If 2 rows are selected and EMPNUMs = 'E3' and 'E5'?

-- TEST:0042 MIN function in subquery!
 SELECT EMPNUM FROM STAFF WHERE GRADE = (SELECT MIN(GRADE) FROM STAFF);

EMPNUM 
====== 

E2     

-- PASS:0042 If EMPNUM = 'E2'?

-- TEST:0043 AVG function!
 SELECT AVG(GRADE) FROM STAFF;

                  AVG 
===================== 

                   12 

-- PASS:0043 If AVG(GRADE) = 12?

DROP DATABASE;
