Use CONNECT or CREATE DATABASE to specify a database
-- defect s0369191
-- FIREBIRD RETURNS WARNING SQLSTATE FOR STRING TRUCATION ON INSERT (WRONG SQLSTATE)
set names ascii;
set sqlstate on;
create database 'test.fdb' default character set iso8859_1;
set sqlstate on;
create table test (c char(3) );
-- should produce sqlstate 22001
insert into test values ('xxxx');
Statement failed, SQLCODE = -802, SQLSTATE = 22001
arithmetic exception, numeric overflow, or string truncation
create table testsrc (c char(5) );
create table testdest (c char(4) );
insert into testsrc values ('xxxxx');
-- again, sqlstate 22001
insert into testdest select * from testsrc;
Statement failed, SQLCODE = -802, SQLSTATE = 22001
arithmetic exception, numeric overflow, or string truncation
create table test_utf8 (c char(5) character set utf8);
create table test_ascii (c char(5) character set ascii);
insert into test_utf8 values (_utf8'testñ');
insert into test_ascii select * from test_utf8;
Statement failed, SQLCODE = -802, SQLSTATE = 22018
arithmetic exception, numeric overflow, or string truncation
-Cannot transliterate character between character sets
SET TERM ^;
CREATE PROCEDURE trunc_proc (c_src char(10) ) 
AS
  declare c_dest char(5);
BEGIN
  c_dest = c_src;
END ^
SET TERM ;^
SHOW PROCEDURE trunc_proc;
Procedure text:
=============================================================================

  declare c_dest char(5);
BEGIN
  c_dest = c_src;
END
=============================================================================
Parameters:
C_SRC                             INPUT CHAR(10) 
execute procedure trunc_proc ('xxxxxxxxxxx');
Statement failed, SQLCODE = -802, SQLSTATE = 22001
arithmetic exception, numeric overflow, or string truncation
execute procedure trunc_proc ('xxxxxxxxxx');
Statement failed, SQLCODE = -802, SQLSTATE = 22001
arithmetic exception, numeric overflow, or string truncation
-At procedure 'TRUNC_PROC'
drop database;
quit;
