Use CONNECT or CREATE DATABASE to specify a database
SET NAMES ASCII;
CREATE DATABASE 'test.fdb' DEFAULT CHARACTER SET ISO8859_1;

INPUT ddl/input/base-tab.sql;
 CREATE TABLE STAFF (EMPNUM CHAR(3) NOT NULL UNIQUE,EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
 CREATE TABLE STAFF1 (EMPNUM CHAR(3) NOT NULL, EMPNAME  CHAR(20), GRADE DECIMAL(4), CITY CHAR(15));
 CREATE TABLE STAFF3 (EMPNUM CHAR(3) NOT NULL , EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15), UNIQUE (EMPNUM));
 CREATE TABLE STAFF4 (EMPNUM CHAR(3) NOT NULL, EMPNAME CHAR(20), GRADE DECIMAL(4), CITY CHAR(15)); 
 
 CREATE TABLE PROJ (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));
 CREATE TABLE PROJ1 (PNUM CHAR(3) NOT NULL UNIQUE, PNAME CHAR(20), PTYPE CHAR(6), BUDGET DECIMAL(9), CITY CHAR(15));

 CREATE TABLE WORKS (EMPNUM CHAR(3) NOT NULL, PNUM CHAR(3) NOT NULL, HOURS DECIMAL(5), UNIQUE(EMPNUM,PNUM));

 CREATE TABLE VTABLE (COL1   INTEGER, COL2   INTEGER, COL3   INTEGER, COL4   INTEGER, COL5   DECIMAL(7,2)); 
 CREATE TABLE UPUNIQ (NUMKEY  DECIMAL(3) NOT NULL UNIQUE, COL2 CHAR(2));

 INSERT INTO STAFF VALUES ('E1','Alice',12,'Deale');
 INSERT INTO STAFF VALUES ('E2','Betty',10,'Vienna');
 INSERT INTO STAFF VALUES ('E3','Carmen',13,'Vienna');
 INSERT INTO STAFF VALUES ('E4','Don',12,'Deale');
 INSERT INTO STAFF VALUES ('E5','Ed',13,'Akron');
 INSERT INTO PROJ VALUES  ('P1','MXSS','Design',10000,'Deale');
 INSERT INTO PROJ VALUES  ('P2','CALM','Code',30000,'Vienna');
 INSERT INTO PROJ VALUES  ('P3','SDP','Test',30000,'Tampa');
 INSERT INTO PROJ VALUES  ('P4','SDP','Design',20000,'Deale');
 INSERT INTO PROJ VALUES  ('P5','IRM','Test',10000,'Vienna');
 INSERT INTO PROJ VALUES  ('P6','PAYR','Design',50000,'Deale');
 INSERT INTO WORKS VALUES  ('E1','P1',40);
 INSERT INTO WORKS VALUES  ('E1','P2',20);
 INSERT INTO WORKS VALUES  ('E1','P3',80);
 INSERT INTO WORKS VALUES  ('E1','P4',20);
 INSERT INTO WORKS VALUES  ('E1','P5',12);
 INSERT INTO WORKS VALUES  ('E1','P6',12);
 INSERT INTO WORKS VALUES  ('E2','P1',40);
 INSERT INTO WORKS VALUES  ('E2','P2',80);
 INSERT INTO WORKS VALUES  ('E3','P2',20);
 INSERT INTO WORKS VALUES  ('E4','P2',20);
 INSERT INTO WORKS VALUES  ('E4','P4',40);
 INSERT INTO WORKS VALUES  ('E4','P5',80);
 INSERT INTO VTABLE VALUES(10,+20,30,40,10.50);
 INSERT INTO VTABLE VALUES(0,1,2,3,4.25);
 INSERT INTO VTABLE VALUES(100,200,300,400,500.01);
 INSERT INTO VTABLE VALUES(1000,-2000,3000,NULL,4000.00);
 INSERT INTO STAFF3 SELECT * FROM STAFF;
 INSERT INTO UPUNIQ VALUES(1,'A');
 INSERT INTO UPUNIQ VALUES(2,'B');
 INSERT INTO UPUNIQ VALUES(3,'C');
 INSERT INTO UPUNIQ VALUES(4,'D');
 INSERT INTO UPUNIQ VALUES(6,'F');
 INSERT INTO UPUNIQ VALUES(8,'H');
COMMIT WORK;

-- TEST:0393 SUM, MAX on Cartesian product!

 CREATE TABLE STAFF1 (EMPNUM    CHAR(3) NOT NULL, EMPNAME  CHAR(20), GRADE DECIMAL(4), CITY   CHAR(15));
Statement failed, SQLSTATE = 42S01
unsuccessful metadata update
-Table STAFF1 already exists
After line 5 in file ddl/nist/dml073.sql
 SELECT SUM(HOURS), MAX(HOURS) FROM STAFF, WORKS;

                  SUM          MAX 
===================== ============ 
                 2320           80 

-- PASS:0393 If SUM(HOURS) = 2320 and MAX(HOURS) = 80?

 SELECT AVG(HOURS), MIN(HOURS) FROM STAFF, WORKS WHERE STAFF.EMPNUM = 'E2' AND STAFF.EMPNUM = WORKS.EMPNUM;

                  AVG          MIN 
===================== ============ 
                   60           40 

-- PASS:0394 If AVG(HOURS) = 60 and MIN(HOURS) = 40?

-- TEST:0395 SUM, MIN on joined table with GROUP without WHERE!
 SELECT STAFF.EMPNUM, SUM(HOURS), MIN(HOURS) FROM STAFF, WORKS GROUP BY STAFF.EMPNUM ORDER BY 1;

EMPNUM                   SUM          MIN 
====== ===================== ============ 
E1                       464           12 
E2                       464           12 
E3                       464           12 
E4                       464           12 
E5                       464           12 

 
-- PASS:0395 If 5 rows are selected with the following order?
-- PASS:0395 STAFF.EMPNUM SUM(HOURS) MIN(HOURS)?
-- PASS:0395 'E1' 464 12?
-- PASS:0395 'E2' 464 12?
-- PASS:0395 'E3' 464 12?
-- PASS:0395 'E4' 464 12?
-- PASS:0395 'E5' 464 12?


-- TEST:0396 SUM, MIN on joined table with WHERE, GROUP BY, HAVING!
 SELECT STAFF.EMPNUM, AVG(HOURS), MIN(HOURS) FROM  STAFF, WORKS WHERE STAFF.EMPNUM IN ('E1','E4','E3') AND STAFF.EMPNUM = WORKS.EMPNUM GROUP BY STAFF.EMPNUM HAVING COUNT(*) > 1 ORDER BY STAFF.EMPNUM;

EMPNUM                   AVG          MIN 
====== ===================== ============ 
E1                        30           12 
E4                        46           20 

-- PASS:0396 If 2 rows are selected with the following order?
-- PASS:0396 STAFF.EMPNUM AVG(HOURS) MIN(HOURS)?
-- PASS:0396 'E1' 30 to 31 12?
-- PASS:0396 'E4' 46 to 47 20?

DROP DATABASE;
