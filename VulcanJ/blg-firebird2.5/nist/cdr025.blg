Use CONNECT or CREATE DATABASE to specify a database
SET NAMES ASCII;
CREATE DATABASE 'test.fdb' DEFAULT CHARACTER SET ISO8859_1;

 CREATE TABLE COMMODITY (C_NUM INTEGER NOT NULL, C_NAME CHAR(7) NOT NULL UNIQUE, PRIMARY KEY (C_NUM));
 CREATE TABLE CURRENCY_TABLE (CURRENCY CHAR(10) NOT NULL, DOLLAR_EQUIV NUMERIC(5, 2), PRIMARY KEY (CURRENCY));
 CREATE TABLE MEASURE_TABLE (MEASURE CHAR(8) NOT NULL, POUND_EQUIV NUMERIC(8,2), PRIMARY KEY (MEASURE));
 CREATE TABLE C_TRANSACTION (COMMOD_NO INTEGER, TOT_PRICE     DECIMAL(12,2), CURRENCY  CHAR(10), UNITS     INTEGER, MEASURE   CHAR(8), T_DATE    INTEGER, FOREIGN KEY (COMMOD_NO)  REFERENCES COMMODITY, FOREIGN KEY (CURRENCY) REFERENCES CURRENCY_TABLE, FOREIGN KEY (MEASURE) REFERENCES MEASURE_TABLE); 
 CREATE VIEW DOLLARS_PER_POUND (COMMODITY, UNIT_PRICE, FROM_DATE, TO_DATE) AS SELECT COMMODITY.C_NAME,  SUM(TOT_PRICE * DOLLAR_EQUIV) / SUM(UNITS * POUND_EQUIV), MIN(T_DATE), MAX(T_DATE) FROM C_TRANSACTION, COMMODITY, CURRENCY_TABLE, MEASURE_TABLE WHERE C_TRANSACTION.COMMOD_NO = COMMODITY.C_NUM AND C_TRANSACTION.CURRENCY = CURRENCY_TABLE.CURRENCY AND C_TRANSACTION.MEASURE  = MEASURE_TABLE.MEASURE GROUP BY COMMODITY.C_NAME HAVING SUM(TOT_PRICE * DOLLAR_EQUIV) > 10000; 
 CREATE VIEW COST_PER_UNIT (COMMODITY, UNIT_PRICE, CURRENCY, MEASURE) AS SELECT COMMODITY, UNIT_PRICE * POUND_EQUIV / DOLLAR_EQUIV, CURRENCY, MEASURE FROM DOLLARS_PER_POUND, CURRENCY_TABLE, MEASURE_TABLE; 
 INSERT INTO COMMODITY VALUES (17, 'Wheat'); 
 INSERT INTO COMMODITY VALUES (14, 'Saffron'); 
 INSERT INTO COMMODITY VALUES (23, 'Alfalfa'); 
 INSERT INTO CURRENCY_TABLE VALUES ('DOLLAR', 1.00); 
 INSERT INTO CURRENCY_TABLE VALUES ('POUND', 1.91); 
 INSERT INTO CURRENCY_TABLE VALUES ('DM', .45); 
 INSERT INTO MEASURE_TABLE VALUES ('POUND', 1.00); 
 INSERT INTO MEASURE_TABLE VALUES ('OUNCE', .06); 
 INSERT INTO MEASURE_TABLE VALUES ('KILO', 2.20); 
 INSERT INTO MEASURE_TABLE VALUES ('TON', 2000.00); 
 INSERT INTO C_TRANSACTION VALUES (17, 1411.5, 'DM', 4000, 'KILO', 871212); 
 INSERT INTO C_TRANSACTION VALUES (17, 7000.0, 'POUND', 100, 'TON', 871012); 
 INSERT INTO C_TRANSACTION VALUES (23, 20000.0, 'DOLLAR', 40000, 'POUND', 880707); 
 INSERT INTO C_TRANSACTION VALUES (14, 10000.0, 'DM', 900, 'OUNCE', 880606); 
 INSERT INTO C_TRANSACTION VALUES (14, 10000.0, 'DM', 900, 'OUNCE', 880707); 

-- TEST:0402 Computed GROUP BY view over referencing tables!
 SELECT COUNT(*) FROM C_TRANSACTION WHERE COMMOD_NO = 17; 

       COUNT 
============ 
           2 

-- PASS:0402 If count = 2?

 SELECT UNIT_PRICE, FROM_DATE, TO_DATE, COMMODITY  FROM DOLLARS_PER_POUND ORDER BY COMMODITY DESC; 

           UNIT_PRICE    FROM_DATE      TO_DATE COMMODITY 
===================== ============ ============ ========= 
             0.067074       871012       871212 Wheat     
             0.500000       880707       880707 Alfalfa   

-- PASS:0402 If the first row has the following values?
-- PASS:0402 If UNIT_PRICE is between 0.06 and 0.07?
-- PASS:0402 If FROM_DATE = 871012 and TO_DATE = 871212?

-- TEST:0403 View on computed GROUP BY view with join!
-- NOTE: OPTIONAL test
 SELECT COUNT(*) FROM COST_PER_UNIT;

       COUNT 
============ 
          24 

-- PASS:0403 If count = 24?

 SELECT CURRENCY, MEASURE, UNIT_PRICE, COMMODITY FROM COST_PER_UNIT;

CURRENCY   MEASURE             UNIT_PRICE COMMODITY 
========== ======== ===================== ========= 
DOLLAR     POUND             0.5000000000 Alfalfa   
DOLLAR     OUNCE             0.0300000000 Alfalfa   
DOLLAR     KILO              1.1000000000 Alfalfa   
DOLLAR     TON            1000.0000000000 Alfalfa   
POUND      POUND             0.2617801047 Alfalfa   
POUND      OUNCE             0.0157068062 Alfalfa   
POUND      KILO              0.5759162303 Alfalfa   
POUND      TON             523.5602094240 Alfalfa   
DM         POUND             1.1111111111 Alfalfa   
DM         OUNCE             0.0666666666 Alfalfa   
DM         KILO              2.4444444444 Alfalfa   
DM         TON            2222.2222222222 Alfalfa   
DOLLAR     POUND             0.0670740000 Wheat     
DOLLAR     OUNCE             0.0040244400 Wheat     
DOLLAR     KILO              0.1475628000 Wheat     
DOLLAR     TON             134.1480000000 Wheat     
POUND      POUND             0.0351172774 Wheat     
POUND      OUNCE             0.0021070366 Wheat     
POUND      KILO              0.0772580104 Wheat     
POUND      TON              70.2345549738 Wheat     

CURRENCY   MEASURE             UNIT_PRICE COMMODITY 
========== ======== ===================== ========= 
DM         POUND             0.1490533333 Wheat     
DM         OUNCE             0.0089432000 Wheat     
DM         KILO              0.3279173333 Wheat     
DM         TON             298.1066666666 Wheat     

-- PASS:0403 If for values CURRENCY = 'DM' and?
-- PASS:0403 MEASURE = 'KILO' and COMMODITY = 'Alfalfa'?
-- PASS:0403 UNIT_PRICE is between 2.42 and 2.47?

-- TEST:0413 Computed SELECT on computed VIEW!
 SELECT (100 + 7) * UNIT_PRICE * 700 / 100, COMMODITY FROM DOLLARS_PER_POUND ORDER BY COMMODITY;

               DIVIDE COMMODITY 
===================== ========= 
           374.500000 Alfalfa   
            50.238426 Wheat     

-- PASS:0413 If the first row has the following values?
-- PASS:0413 If Answer is between 374.4 and 374.6?
-- PASS:0413 If COMMODITY = 'Alfalfa'?

DROP DATABASE;
